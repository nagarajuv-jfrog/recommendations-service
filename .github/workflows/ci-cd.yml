name: 'Recommendations-Service CI/CD Pipeline'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JFROG_URL }}
          JF_USER: ${{ vars.JFROG_USER }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
          JF_PROJECT: "bookverse"
          JFROG_CLI_BUILD_NAME: ${{ github.event.repository.name }}
          JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}

      - name: Configure Artifactory for Python
        run: |
          # Configure pip to resolve from our local repository
          jfrog pipc --repo-resolve=bookverse-pypi-local

      - name: Install Python dependencies with JFrog CLI
        run: |
          # The build name and number are picked up automatically from the environment variables.
          jfrog pip install -r requirements.txt --build-name=${{ github.event.repository.name }} --build-number=${{ github.run_number }}

      - name: Set Unique Version
        id: set_version
        run: echo "VERSION=1.3.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Login to JFrog Docker Registry
        run: echo "${{ secrets.JFROG_ACCESS_TOKEN }}" | docker login ${{ vars.JFROG_URL }} -u "${{ vars.JFROG_USER }}" --password-stdin

      - name: Build and Push Backend Image
        run: |
          REGISTRY_URL=$(echo "${{ vars.JFROG_URL }}" | sed 's|https://||')
          IMAGE_TAG="$REGISTRY_URL/bookverse-docker-internal/${{ github.event.repository.name }}-backend:${{ env.VERSION }}"
          # Use 'jfrog docker build' to integrate with build-info
          jfrog docker build --pull -t $IMAGE_TAG \
            --build-arg JFROG_URL=${{ vars.JFROG_URL }} \
            --build-arg JFROG_USER=${{ vars.JFROG_USER }} \
            --build-arg JFROG_ACCESS_TOKEN=${{ secrets.JFROG_ACCESS_TOKEN }} \
            -f Dockerfile.backend .
          # Push the image and its build-info to Artifactory
          jfrog rt dp $IMAGE_TAG bookverse-docker-internal --build-name=${{ github.event.repository.name }} --build-number=${{ github.run_number }}

      - name: Build and Push Frontend Image
        run: |
          REGISTRY_URL=$(echo "${{ vars.JFROG_URL }}" | sed 's|https://||')
          IMAGE_TAG="$REGISTRY_URL/bookverse-docker-internal/${{ github.event.repository.name }}-frontend:${{ env.VERSION }}"
          jfrog docker build --pull -t $IMAGE_TAG -f Dockerfile.frontend .
          jfrog rt dp $IMAGE_TAG bookverse-docker-internal --build-name=${{ github.event.repository.name }} --build-number=${{ github.run_number }}

      - name: Collect Git information for Build Info
        run: |
          jfrog rt bag ${{ github.event.repository.name }} ${{ github.run_number }}

      - name: Collect Environment Variables for Build Info
        run: |
          jfrog rt bce ${{ github.event.repository.name }} ${{ github.run_number }}

      - name: Publish Build Info
        run: |
          jfrog rt bp ${{ github.event.repository.name }} ${{ github.run_number }}

      - name: Create Microservice Release Bundle
        run: |
          jfrog rbc --build-name=${{ github.event.repository.name }} --build-number=${{ github.run_number }}\
           ${{ github.event.repository.name }} ${{ env.VERSION }}

